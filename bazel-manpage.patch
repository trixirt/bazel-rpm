diff -rNp bazel-4.2.1.orig/bazel.1 bazel-4.2.1/bazel.1
*** bazel-4.2.1.orig/bazel.1	1970-01-01 01:00:00.000000000 +0100
--- bazel-4.2.1/bazel.1	2021-10-10 19:39:34.720588347 +0200
***************
*** 0 ****
--- 1,87 ----
+ .TH BAZEL 1 "August 2020"
+ .SH NAME
+ bazel \- tool to automate software builds and tests
+ .SH SYNOPSIS
+ .B bazel
+ \fI\,<command> <options> \/\fR...
+ .SH DESCRIPTION
+ .IP
+ [bazel release 3.7.2]
+ .SS "Available commands:"
+ .TP
+ analyze\-profile
+ Analyzes build profile data.
+ .TP
+ aquery
+ Analyzes the given targets and queries the action graph.
+ .TP
+ build
+ Builds the specified targets.
+ .TP
+ canonicalize\-flags
+ Canonicalizes a list of bazel options.
+ .TP
+ clean
+ Removes output files and optionally stops the server.
+ .TP
+ coverage
+ Generates code coverage report for specified test targets.
+ .TP
+ cquery
+ Loads, analyzes, and queries the specified targets w/ configurations.
+ .TP
+ dump
+ Dumps the internal state of the bazel server process.
+ .TP
+ fetch
+ Fetches external repositories that are prerequisites to the targets.
+ .TP
+ help
+ Prints help for commands, or the index.
+ .TP
+ info
+ Displays runtime info about the bazel server.
+ .TP
+ license
+ Prints the license of this software.
+ .TP
+ mobile\-install
+ Installs targets to mobile devices.
+ .TP
+ print_action
+ Prints the command line args for compiling a file.
+ .TP
+ query
+ Executes a dependency graph query.
+ .TP
+ run
+ Runs the specified target.
+ .TP
+ shutdown
+ Stops the bazel server.
+ .TP
+ sync
+ Syncs all repositories specified in the workspace file
+ .TP
+ test
+ Builds and runs the specified test targets.
+ .TP
+ version
+ Prints version information for bazel.
+ .SS "Getting more help:"
+ .IP
+ bazel help <command>
+ .IP
+ Prints help and options for <command>.
+ .IP
+ bazel help startup_options
+ .IP
+ Options for the JVM hosting bazel.
+ .IP
+ bazel help target\-syntax
+ .IP
+ Explains the syntax for specifying targets.
+ .IP
+ bazel help info\-keys
+ .IP
+ Displays a list of keys used by the info command.
diff -rNp bazel-4.2.1.orig/scripts/packages/BUILD bazel-4.2.1/scripts/packages/BUILD
*** bazel-4.2.1.orig/scripts/packages/BUILD	2021-10-10 17:12:36.463270503 +0200
--- bazel-4.2.1/scripts/packages/BUILD	2021-10-10 19:39:00.572025193 +0200
*************** genrule(
*** 127,132 ****
--- 127,133 ----
          "//scripts:bash_completion",
          "//scripts:bazel.fish",
          "//scripts/zsh_completion:_bazel",
+         "//scripts:bazel.1",
      ],
      launcher = ":launcher_bin.sh",
  ) for kind in ("with-jdk", "without-jdk")]
diff -rNp bazel-4.2.1.orig/scripts/packages/BUILD.orig bazel-4.2.1/scripts/packages/BUILD.orig
*** bazel-4.2.1.orig/scripts/packages/BUILD.orig	1970-01-01 01:00:00.000000000 +0100
--- bazel-4.2.1/scripts/packages/BUILD.orig	2021-10-10 19:36:07.768163632 +0200
***************
*** 0 ****
--- 1,145 ----
+ load(":self_extract_binary.bzl", "self_extract_binary")
+ 
+ package(default_visibility = ["//scripts/packages:__subpackages__"])
+ 
+ filegroup(
+     name = "srcs",
+     srcs = glob(["**"]) + [
+         "//scripts/packages/debian:srcs",
+         "//scripts/packages/fedora:srcs",
+         "//scripts/packages/dmg:srcs",
+     ],
+     visibility = [
+         "//scripts:__pkg__",
+         "//scripts/packages:__subpackages__",
+     ],
+ )
+ 
+ filegroup(
+     name = "packages",
+     srcs = select({
+         "//src/conditions:windows": [
+             ":zip-bazel-exe",
+             ":zip-bazel-exe_nojdk",
+         ],
+         "//src/conditions:freebsd": [],
+         "//src/conditions:openbsd": [],
+         "//src/conditions:darwin": [
+             ":with-jdk/install.sh",
+             ":without-jdk/install.sh",
+             ":generate-package-info",
+         ],
+         "//conditions:default": [
+             ":with-jdk/install.sh",
+             ":without-jdk/install.sh",
+             ":generate-package-info",
+             "//:bazel-distfile",
+             "//scripts/packages/debian:bazel-debian",
+             "//scripts/packages/debian:bazel-debian-src",
+         ],
+     }),
+ )
+ 
+ filegroup(
+     name = "wrapper",
+     srcs = ["bazel.sh"],
+     visibility = [
+         "//src/test/shell/bazel:__subpackages__",
+     ],
+ )
+ 
+ sh_binary(
+     name = "package-info-generator",
+     srcs = ["package_info_generator.sh"],
+ )
+ 
+ genrule(
+     name = "generate-package-info",
+     outs = ["README.md"],
+     cmd = "$(location :package-info-generator) $$(find . -name '*status*.txt') >$@",
+     stamp = 1,
+     tools = [":package-info-generator"],
+ )
+ 
+ [genrule(
+     name = "zip-bazel-exe" + suffix,
+     srcs = ["//src:bazel-bin%s.exe" % suffix],
+     outs = ["bazel%s.zip" % suffix],
+     cmd = "\n".join([
+         "tmpdir=$$(mktemp -d $${TMPDIR:-/tmp}/tmp.XXXXXXXX)",
+         "trap \"rm -fr $${tmpdir}\" EXIT",
+         "cp $(SRCS) $${tmpdir}/bazel.exe",
+         "touch -t 198001010000.00 $${tmpdir}/bazel.exe",
+         "zip -jq $@ $${tmpdir}/bazel.exe",
+     ]),
+ ) for suffix in [
+     "",
+     "_nojdk",
+ ]]
+ 
+ genrule(
+     name = "generate-launcher",
+     srcs = [
+         "template_bin.sh",
+         ":README.md",
+     ],
+     outs = ["launcher_bin.sh"],
+     cmd = """
+         release_info="$$(cat $(location :README.md))"
+         template="$$(cat $(location template_bin.sh))"
+         echo "$${template//%release_info%/$${release_info}}" >$@
+         """,
+ )
+ 
+ genrule(
+     name = "rename-bazel-bin",
+     srcs = ["//src:bazel"],
+     outs = ["with-jdk/bazel-real"],
+     cmd = "mkdir -p $$(dirname $@); cp $< $@",
+ )
+ 
+ genrule(
+     name = "rename-bazel-bin-without-jdk",
+     srcs = ["//src:bazel_nojdk"],
+     outs = ["without-jdk/bazel-real"],
+     cmd = "mkdir -p $$(dirname $@); cp $< $@",
+ )
+ 
+ genrule(
+     name = "bazel-sh-with-jdk",
+     srcs = ["bazel.sh"],
+     outs = ["with-jdk/bazel"],
+     cmd = "mkdir -p $$(dirname $@); cp $< $@",
+ )
+ 
+ genrule(
+     name = "bazel-sh-without-jdk",
+     srcs = ["bazel.sh"],
+     outs = ["without-jdk/bazel"],
+     cmd = "mkdir -p $$(dirname $@); cp $< $@",
+ )
+ 
+ [self_extract_binary(
+     name = "%s/install.sh" % kind,
+     flatten_resources = [
+         ":%s/bazel-real" % kind,
+         ":%s/bazel" % kind,
+         "//scripts:bash_completion",
+         "//scripts:bazel.fish",
+         "//scripts/zsh_completion:_bazel",
+     ],
+     launcher = ":launcher_bin.sh",
+ ) for kind in ("with-jdk", "without-jdk")]
+ 
+ genrule(
+     name = "embedded_label",
+     srcs = [],
+     outs = [
+         "version.txt",
+     ],
+     cmd =
+         "find -L . -name stable-status.txt -exec cat '{}' ';'" +
+         " | grep EMBED_LABEL | cut -d ' ' -f 2-" +
+         " > $@\n",
+     stamp = 1,
+ )
diff -rNp bazel-4.2.1.orig/scripts/packages/template_bin.sh bazel-4.2.1/scripts/packages/template_bin.sh
*** bazel-4.2.1.orig/scripts/packages/template_bin.sh	2021-10-10 17:12:36.468270580 +0200
--- bazel-4.2.1/scripts/packages/template_bin.sh	2021-10-10 19:39:22.719390297 +0200
*************** fi
*** 156,162 ****
  mkdir -p ${bin} ${base} ${base}/bin ${base}/etc
  echo -n .
  
! unzip -q "${BASH_SOURCE[0]}" bazel bazel-real bazel-complete.bash _bazel bazel.fish -d "${base}/bin"
  echo -n .
  chmod 0755 "${base}/bin/bazel" "${base}/bin/bazel-real"
  echo -n .
--- 156,162 ----
  mkdir -p ${bin} ${base} ${base}/bin ${base}/etc
  echo -n .
  
! unzip -q "${BASH_SOURCE[0]}" bazel bazel-real bazel-complete.bash _bazel bazel.fish bazel.1 -d "${base}/bin"
  echo -n .
  chmod 0755 "${base}/bin/bazel" "${base}/bin/bazel-real"
  echo -n .
